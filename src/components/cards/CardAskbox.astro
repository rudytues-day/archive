---
interface Props {
	user?: string;
	date?: Date;
    tags?: Array<string>;
    collapsed?: boolean
}

const { date, user, collapsed, tags } = Astro.props as Props;

import '../../utility/styles/tag-styles.css'
import '../../utility/styles/main-styles.css'
import '../../utility/styles/card-styles.css'

import { formatDate, slugify } from '../../utility/scripts/format-fxn';
import { undefined } from 'astro:schema';
---

<div class="card card-askbox">
    <h1 class="card-title">
        <span>
            { user ?
                <i class="fas fa-user"></i> <span>{user}</span> :
                <i class="fas fa-user-secret"></i> <span>ANONYMOUS</span>
            }
        </span>
        <span>{formatDate(date)} <i class="fas fa-arrow-up-right-from-square"></i>
        </span>
    </h1>
    <div class="card-body">
        { collapsed ?
            (<div class="answer collapsed">
                <slot />
                <button class="read-more">READ MORE</button>
            </div>)
            : (<div class="answer">
                <slot />
            </div>) 
        }
        { tags &&
            <ul class="tags tag-cloud tag-cloud-askbox">
                {tags.map((tag) => (
                    <li class="tag"><a href={`/askbox/tagged/${slugify(tag)}`}>{tag}</a></li>
                ))}
            </ul>
        }
    </div>
</div>

<style>
    .answer {
        margin: 0em auto 1em auto;
        position: relative;
    }

    .answer.collapsed {
        /* max-height: 20rem; */
        /* overflow: hidden; */
    }

    .answer.collapsed:after {
        content: "";
        z-index: 9;
        height: 100%;
        width: 100%;
        background: linear-gradient(to top,
        rgba(255, 255, 0, 1) 0%
        rgba(0,0,255, 1) 100%);
        position: absolute;
        bottom: 0;
    }

    .read-more {
        /* position: absolute; */
        margin: auto;
    }

    /* .collapsed {
        display: -webkit-box;
        -webkit-line-clamp: 10;
                line-clamp: 10;
                text-overflow: ellipsis;
    } */

    .fa-arrow-up-right-from-square {
        margin-inline: 0.25em 0em;
    }

</style>

<script>

    const readMoreBtn = document.querySelectorAll(".read-more");

    
    readMoreBtn.forEach(button => {
        button.addEventListener("click", () => {
            // let getAnswer = function(button, selector) {
                let answer = button.previousElementSibling;
                console.log(answer);
                answer?.classList.toggle("red")
            }
        // let newsletters = document.querySelectorAll(".answer");
        // console.log(newsletters);
        // newsletters.forEach(letter => {
        //     letter.classList.toggle("red")
        // });
    )
})

;

</script>