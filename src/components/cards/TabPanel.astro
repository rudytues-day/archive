window.addEventListener("DOMContentLoaded", () => {
    const tabList = document.querySelector('[role="tablist"]');
    const tabs = tabList!.querySelectorAll(':scope > [role="tab"]');

// Add a click event handler to each tab
    tabs.forEach((tab) => {
        tab.addEventListener("click", changeTabs);
    });

// Enable arrow navigation between tabs in the tab list
// if read hash switch to specific tab
// s 
// check
    let tabFocus = 0;

    // 

    tabList!.addEventListener("keydown", (e) => {
        // Move right
        let keyboardEvent = (e as KeyboardEvent);
        if (keyboardEvent.key === "ArrowRight" || keyboardEvent.key === "ArrowLeft") {
            tabs[tabFocus].setAttribute("tabindex", "-1");
            if (keyboardEvent.key === "ArrowRight") {
                tabFocus++;
            // If we're at the end, go to the start
                if (tabFocus >= tabs.length) {
                    tabFocus = 0;
                }
            // Move left
        } else if (keyboardEvent.key === "ArrowLeft") {
            tabFocus--;
            // If we're at the start, move to the end
            if (tabFocus < 0) {
            tabFocus = tabs.length - 1;
            }
        }

        tabs[tabFocus].setAttribute("tabindex", "0");
        (tabs[tabFocus] as HTMLElement).focus();
        }
    });

function changeTabs() {
    const targetTab = e.target;
    
    const tabList = targetTab.parentNode;
    const tabGroup = tabList.parentNode;

// Remove all current selected tabs
    tabList
        .querySelectorAll(':scope > [aria-selected="true"]')
        .forEach((t) => t.setAttribute("aria-selected", false));

// Set this tab as selected
    targetTab.setAttribute("aria-selected", true);

// Hide all tab panels
    tabGroup
        .querySelectorAll(':scope > [role="tabpanel"]')
        .forEach((p) => p.setAttribute("hidden", true));

// Show the selected panel
    tabGroup
        .querySelector(`#${targetTab.getAttribute("aria-controls")}`)
        .removeAttribute("hidden");

    }
    
})