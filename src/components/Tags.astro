---
import { getCollection } from "astro:content";
import { slugify } from "../utility/scripts/format-fxn";

const entries = await getCollection("entries");

// sort tags by frequency

function tagsByFrequency() {}

const allEntryTags = entries.map((entry => 
	entry.data.tags)).reduce((accumulator, value) => accumulator.concat(value), [])

let frequency = {}
allEntryTags.forEach(tag => {
	if (frequency[tag]) {
		frequency[tag]++;}
	else {frequency[tag] = 1}
})

function sortByFrequency(a, b) {
	return frequency[a] - frequency[b];
}

const sortedTags = [... new Set(allEntryTags.sort(sortByFrequency).toReversed().flat())];

---

    <ul class="tags tags-cloud">
        {sortedTags.map(tag => (
            <li><a href={`/archive/tagged/${slugify(tag)}/`}>{tag}</a></li>
        ))
        }
    </ul>

<style>

    h2 {
        font-family: var(--display);
        text-align: center;
        color: white;
    }

    .tags {
        margin: 0 auto;
        padding: 2em 0;
        background: var(--primary-clr-dark);
		margin: 0em 1em;
    }

    .tags ul {
		display: flex;
		flex-flow: row wrap;
		list-style: none;
		padding: 0;
		gap: 0.4em;
        justify-content: center;
        margin: 2em 3em;
	}

    .tags li {
		background-color: var(--primary-clr-med);
		color: var(--white-clr);
		font-family: var(--display);
		text-transform: uppercase;
		padding: 0.125em 0.3em 0.4em 0.3em;
		line-height: 1;
		border-radius: 0.25em;
		transition: ease 0.2s;
	}

	li a {
		transition: 200ms;
	}

	li a:hover {
		color: var(--primary-accent-clr)
	}



</style>