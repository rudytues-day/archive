---
import '../../utility/styles/wrapper-styles.css';

import ArchiveLayout from '../../layouts/ArchiveLayout.astro';
import CardArchive from '../../components/cards/CardArchive.astro';
import Pagination from '../../components/Pagination.astro';

import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";

import { sortByCreationDate } from '../../utility/scripts/sort-fxn.js';

export const getStaticPaths = (async ( { paginate } ) => {
    const entries = await getCollection("entries");
	const sortedEntries = entries.sort(sortByCreationDate).toReversed();
    return paginate(sortedEntries, {
        pageSize: 4,
    })
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const pathname = new URL(Astro.request.url).pathname.split('/');

const firstPath = pathname[1];
---

<ArchiveLayout pageTitle="ARCHIVE">
		
	<div class="card-wrapper">
		{
			page.data.map((entry) =>
				<CardArchive
					slug={entry.slug}
					title={entry.data.title}
					date={entry.data.date}
					thumb={entry.data.thumb.src}
					tags={entry.data.tags}
					desc={entry.data.desc}
					original={entry.data.original}
					medium={entry.data.medium}
					Nsfw={entry.data.Nsfw}
					Dd={entry.data.Dd}
					icons={entry.data.icons}
				/>
		)}
	</div>

	<Pagination
		firstUrl={`/${firstPath}`}
		prevUrl={page.url.prev}
		currentPage={page.currentPage}
		currentUrl={page.url.current}
		nextUrl={page.url.next}
		lastUrl={`/${firstPath}/${page.lastPage}`}
	/>

</ArchiveLayout>
