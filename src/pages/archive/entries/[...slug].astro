---
import EntryLayout from '../../../layouts/EntryLayout.astro';
import CardPreview from '../../../components/CardPreview.astro';

import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { slugify, formatDate } from '../../../js/utils';

const {  
	entries,
	title,
	image,
	date,
	Nsfw,
	Dd,
	desc,
	medium,
	tags,
	icons,
} = Astro.props as Props;

export async function getStaticPaths() {
	const entries = await getCollection("entries");
	return entries.map(entry => {
		return {
			params: { slug: entry.slug },
			props: { 
				entries: entries,
				renderContent: entry.render,
				...entry.data
			 }
		}
	});
}

---

<EntryLayout title="ARCHIVE">

	<div class="card">
		<h2>
			<div class="icons">
				{icons.toReversed().map((icon) => (
					<i class={`fas ${(icon)}`}></i>
				))}
			</div>
			<span>{title}</span>
			<div class="icons">
				{icons.map((icon) => (
					<i class={`fas ${(icon)}`}></i>
				))}
			</div>
		</h2>
			<div class="body">
				<Image class="full-image"
				src={image.src}
				alt={`${image.alt}`}
				/>
				<div class="date">
					<b>{formatDate(date)}</b>
					<div class="icons">
						{ Nsfw && <i class="fas fa-ban"></i> }
						{ Dd && <i class="fas fa-feather"></i>}
					</div>
					<b>{medium}</b>
				</div>
				<div class="description">
					<p class="text">{desc}</p>
					<ul class="tags">
						{tags.map((tag) => (
							<li><a href={`/archive/tagged/${slugify(tag)}/`}>{tag}</a></li>
						))}
					</ul>

				</div>
	
			</div>

			<h3>RELATED ENTRIES</h3>

			<div class="card-masonry">
					{ entries.slice(0, 3).map((entry) =>
						<CardPreview
							slug={entry.slug}
							title={entry.data.title}
							date={entry.data.date}
							thumb={entry.data.thumb.src}
							tags={entry.data.tags}
							desc={entry.data.desc}
							original={entry.data.original}
							medium={entry.data.medium}
							Nsfw={entry.data.Nsfw}
							Dd={entry.data.Dd}
							/>
					)}

			</div>

		</div>
	
</Layout>

<style>

	h3 {
		font-family: var(--display);
		text-align: center;
		margin-block: 2em;
		font-size: 1.75rem;
	}
	
	.card {
		margin: 3em 1em;
		max-width: 800px;
		vertical-align: top;
	}

	.body {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.full-image {
		margin: 2em 2em 1em 2em;
		max-height: 80vh;
		width: auto;
	}
	
	h2 {
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 1.5rem;
		background-color: var(--primary-clr-dark);
		padding: 0.5em;
		color: var(--white-clr);
		border-radius: 0.75em 0.75em 0em 0em;
		transition: ease 0.2s;
		font-family: var(--display);
		font-weight: normal;
		gap: 0.7em;
	}

	h2 i {
		font-size: 0.8em
	}

	b {
		font-family: var(--display);
		text-transform: uppercase;
		font-weight: normal;
		font-size: 1.25em;
	}
	
	ul {
		padding: 0;
		margin: 1em;
	}
	
	.date {
		margin: auto;
		display: flex;
		gap: 1em;
	}

	.date i {
		padding-top: 0.7em;
	}
	
	.body {
		padding: 1em;
		border: solid 2px var(--primary-clr-dark);		
		border-radius: 0em 0em 1em 1em;
	}

	.description {
		margin: 1.5em auto;
		max-width: 600px;
		display: grid;
		gap: 1.5em;
		text-wrap: balance;
	}
	
	.text {
		text-align: center;
	}
	
	.thumb {
		list-style: none;
		padding: 0;
		height: 100px;
		width: 100px;
		background-color: var(--primary-clr-dark);
		border-radius: 10px;
	}
	
	.tags {
		display: flex;
		flex-flow: row wrap;
		list-style: none;
		padding: 0;
		margin: auto;
		gap: 0.25em;
		justify-content: center;
		max-width: 500px;
	}
	
	.tags li {
		background-color: var(--primary-clr-dark);
		color: var(--white-clr);
		font-family: var(--display);
		text-transform: uppercase;
		padding: 0.125em 0.3em 0.4em 0.3em;
		line-height: 1;
		border-radius: 0.25em;
		transition: ease 0.2s;
	}
	
	.tags li:hover {
		color: var(--primary-accent-clr)
	}
	
	.return {
		margin: 2em auto;
		text-align: center;
		cursor: pointer;
	}

	.return i {
		font-size: 0.85em;
	}

	.return:not(i) {
		font-family: var(--display);
		font-size: 1.5rem;
	}

	p a {
		font-weight: bold;
		color: var(--primary-link-clr)
	}
	
		/* .react-icons {
			display: flex;
			font-size: 1.4rem;
			gap: 0.5em;
			margin: auto;
			text-align: center;
			align-items: center;
			justify-content: center;
			color: var(--primary-clr-light)
		}
	
		.react-icons .fas:last-child {
			color: var(--primary-accent-clr);
		} */

		.card-masonry {
		margin: 4em auto;
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		justify-content: center;
		align-items: stretch;
		gap: 1.5em;
		height: 100%;
	}
	
	@media all and (min-width: 700px) {
		
		.card-masonry {
			grid-template-columns: repeat(2, 1fr);
			gap: 1em;
		}
		
	}
	
	@media all and (min-width: 1000px) {
		
		.card-masonry {
			grid-template-columns: repeat(3, 1fr);
		}
		
	}

@media all and (min-width: 1200px) {
		
		.card-masonry {
			grid-template-columns: repeat(4, 1fr);
		}
	
	}

</style>
