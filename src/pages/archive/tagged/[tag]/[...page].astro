---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import { render } from 'astro:content';

import ArchiveLayout from '../../../../layouts/ArchiveLayout.astro';
import CardPreview from '../../../../components/cards/CardPreview.astro';
import Pagination from "../../../../components/Pagination.astro";

import { slugify } from "../../../../utility/scripts/format-fxn";

export const getStaticPaths = ( async ({paginate}) => {
    const entries = await getCollection("entries");
    const allTags = [...new Set(entries.flatMap((entry => 
    entry.data.tags))),];
    return allTags.flatMap((tag) => {
        const taggedEntries = entries.toReversed().filter((entry) =>
            entry.data.tags?.includes(tag)); 
        return paginate(taggedEntries, { 
            pageSize: 12,
            params: { tag: `${slugify(tag)}` },
            props: { tag: tag }
        });
    });
}) satisfies GetStaticPaths;

const { page, tag } = Astro.props;

const pathName = new URL(Astro.request.url).pathname.slice(0, -1);
const titleTag = tag.toUpperCase();

import '../../../../utility/styles/wrapper-styles.css';
---

<ArchiveLayout
    pageTitle=`ARCHIVE / ENTRIES TAGGED ${titleTag}`>

    <h1>ENTRIES TAGGED <span>{titleTag}</span></h1>

        <div class="card-wrapper tile-masonry-wrapper">
            {
                page.data.map(async (entry) => {
                const { Content } = await render(entry);
                return (
                    <CardPreview 
                        slug={entry.slug}
                        title={entry.data.title}
                        date={entry.data.date}
                        thumb={entry.data.thumb.src}
                        Nsfw={entry.data.Nsfw}
                        Dd={entry.data.Dd}
                    >
                        <Content />
                    </CardPreview>
                )})
            }
        </div>

        <Pagination 
            firstUrl={pathName}
            prevUrl={page.url.prev} 
            currentUrl={page.url.current}
            currentPage={page.currentPage}
            nextUrl={page.url.next}
            lastUrl={`${pathName}/${page.lastPage}`}
        />

</Layout>

<style>

    h1 {
        margin-block: 0em 1em;
    }

</style>