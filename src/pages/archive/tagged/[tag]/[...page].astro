---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";

import ArchiveLayout from '../../../../layouts/ArchiveLayout.astro';
import CardPreview from '../../../../components/CardPreview.astro';
import Pagination from "../../../../components/Pagination.astro";

import { slugify } from "../../../../utility/utils";

// old code

// export async function getStaticPaths() {
//     const allEntries = await getCollection("entries");
//     const allTags = [...new Set(allEntries.flatMap((entry => 
//     entry.data.tags))),];
    
//     return allTags.map((tag) => {
//         const taggedEntries = allEntries.filter((entry) =>
//         entry.data.tags.includes(tag));
        
//         return {
            // params: { tagged: slugify(tag) },
            // props: { taggedEntries: taggedEntries, tag: tag }
//         }}
//     );
// }

export const getStaticPaths = ( async ({paginate}) => {
    const entries = await getCollection("entries");
    const allTags = [...new Set(entries.flatMap((entry => 
    entry.data.tags))),];
    return allTags.flatMap((tag) => {
        const taggedEntries = entries.toReversed().filter((entry) =>
            entry.data.tags?.includes(tag)); 
        return paginate(taggedEntries, { 
            pageSize: 12,
            params: { tag: `${slugify(tag)}` },
            props: { tag: tag }
        });
    });
}) satisfies GetStaticPaths;

const { page, tag } = Astro.props;

const titleTag = tag.toUpperCase();

---

<ArchiveLayout title={`WORKS // ENTRIES TAGGED "${titleTag}"`}>

    <h3>ENTRIES TAGGED <span>{tag}</span></h3>
        
        <div class="masonry">
            {
                page.data.map((entry) => 
                <CardPreview 
                    slug={entry.slug}
                    title={entry.data.title}
                    date={entry.data.date}
                    thumb={entry.data.thumb.src}
                    Nsfw={entry.data.Nsfw}
                    Dd={entry.data.Dd}
                    desc={entry.data.desc}
                />
            )}
        </div>

        <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />

</Layout>

<style>

    h1 {
        margin: 2em;
        font-family: var(--display);
        text-align: center;
    }

    h3 {
		font-family: var(--display);
        font-size: 1.75rem;
		margin: 1.5em auto 2em auto;
		text-align: center;
	}

    span {
        color: var(--primary-accent-clr)
    }

    .masonry {
        padding: 0;
        margin: 3em 2em;
        gap: 1.5em;
        row-gap: 2em;
        display: flex;
        flex-flow: row wrap;
        align-items: stretch;
        justify-content: center;
    }

    /* #pagination {
        height: 100px;
        width: 100px;
        margin: auto;

    } */

</style>