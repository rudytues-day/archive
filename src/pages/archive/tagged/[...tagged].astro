---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

import ArchiveLayout from '../../../layouts/ArchiveLayout.astro';
import CardPreview from '../../../components/CardPreview.astro';
import Pagination from "../../../components/Pagination.astro";

import { slugify } from "../../../utility/utils";

// old code

export async function getStaticPaths() {
    const allEntries = await getCollection("entries");
    const allTags = [...new Set(allEntries.flatMap((entry => 
    entry.data.tags))),];
    
    return allTags.map((tag) => {
        const taggedEntries = allEntries.filter((entry) =>
        entry.data.tags.includes(tag));
        
        return {
            params: { tagged: slugify(tag) },
            props: { taggedEntries: taggedEntries, tag: tag }
        }}
        );
    }

// new code

// export const getStaticPaths = async ( { paginate } ) => {
//     const allEntries = await getCollection("entries"); 
//     const taggedEntries = allEntries.filter((entry) =>
//         entry.data.tags.includes(tag));  
//             return paginate(taggedEntries, {
//                 pageSize: 7,
//                 params: {
//                     // tag: {tag}
//             }});
//         };

const {taggedEntries, tag} = Astro.props;

const titleTag = tag.toUpperCase();

---

<ArchiveLayout title={`WORKS // ENTRIES TAGGED "${titleTag}"`}>

        <h3>ENTRIES TAGGED <span>{tag}</span></h3>

        <div class="masonry">
            {
                taggedEntries.toReversed().flatMap((entry) => 
                <CardPreview 
                    slug={entry.slug}
                    title={entry.data.title}
                    date={entry.data.date}
                    thumb={entry.data.thumb.src}
                    Nsfw={entry.data.Nsfw}
                    Dd={entry.data.Dd}
                    desc={entry.data.desc}
                />
            )}
        </div>

    <Pagination />

</Layout>

<style>

    h1 {
        margin: 2em;
        font-family: var(--display);
        text-align: center;
    }

    h3 {
		font-family: var(--display);
        font-size: 1.75rem;
		margin: 1.5em auto 2em auto;
		text-align: center;
	}

    span {
        color: var(--primary-accent-clr)
    }

    .masonry {
        padding: 0;
        margin: 3em 1em;
        /* display: grid;
        grid-template-columns: 
        repeat(auto-fit, minmax(200px, 1fr)); */
        gap: 1em;
        display: flex;
        flex-flow: row wrap;
        align-items: stretch;
        justify-content: center;
        }

</style>