---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import { render } from 'astro:content';

import CardAskbox from '../../../../components/cards/CardAskbox.astro';
import Pagination from "../../../../components/Pagination.astro";

import { slugify } from "../../../../utility/scripts/format-fxn";
import { sortByAskDate } from "../../../../utility/scripts/sort-fxn";

export const getStaticPaths = ( async ({paginate}) => {
    const questions = await getCollection("questions");
    const taggedQs = questions.filter(q => q.data.tags !== undefined);
    const allTags = [...new Set(taggedQs.flatMap((question => 
    question.data.tags)))];
    const filteredTags = allTags.filter(tag => tag !== undefined);
    return filteredTags.flatMap((tag) => {
        const thisTagQs = taggedQs.sort(sortByAskDate).filter((q) =>
            q.data.tags?.includes(tag));
        return paginate(thisTagQs, { 
            pageSize: 5,
            params: { tag: `${slugify(tag)}` },
            props: { tag: tag }
        });
    })
}) satisfies GetStaticPaths;

const { page, tag } = Astro.props;


const titleTag = tag.toUpperCase();
const pageTitle = `ASKBOX / QUESTIONS TAGGED ${titleTag}`;

const pathname = new URL(Astro.request.url).pathname.slice(0, -1);
const firstPath = pathname[1];

import '../../../../utility/styles/wrapper-styles.css';
import '../../../../utility/styles/tag-styles.css';
import AskboxLayout from "../../../../layouts/AskboxLayout.astro";
import { sortByCreationDate } from "../../../../utility/scripts/sort-fxn";
---

<AskboxLayout
    pageTitle={pageTitle}>
    <h1 slot="h1-header">QUESTIONS TAGGED <span>{titleTag}</span></h1>
            <div class="question-wrapper">
                {
                    page.data.map(async (question) => {
                    const { Content } = await render(question);
                    return (
                        <div class="q-card-wrapper">
                            <CardAskbox
                                slug={question.slug}
                                user={question.data.user}
                                date={question.data.date}
                                tags={question.data.tags}
                            >
                                <Content />
                            </CardAskbox>
                        </div>
                    )})
                }
            </div>
        </div>

        <div slot="pagination">
            <Pagination
                firstUrl={page.url.first}
                prevUrl={page.url.prev}
                currentPage={page.currentPage}
                currentUrl={page.url.current}
                nextUrl={page.url.next}
                lastUrl={page.url.last}
            />
                </div>


</AskboxLayout>

<style>

span {
    color: var(--primary-accent-600)
}
h1 {
    margin-bottom: 1.75em;
}

</style>